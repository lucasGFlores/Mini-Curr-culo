// Generated by view binder compiler. Do not edit!
package com.example.testevocaional.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.testevocaional.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHistoricoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout colo;

  @NonNull
  public final ImageView imageView20;

  @NonNull
  public final ImageView imageView23;

  @NonNull
  public final ImageView imageView24;

  @NonNull
  public final RecyclerView lista;

  private ActivityHistoricoBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout colo, @NonNull ImageView imageView20,
      @NonNull ImageView imageView23, @NonNull ImageView imageView24, @NonNull RecyclerView lista) {
    this.rootView = rootView;
    this.colo = colo;
    this.imageView20 = imageView20;
    this.imageView23 = imageView23;
    this.imageView24 = imageView24;
    this.lista = lista;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHistoricoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHistoricoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_historico, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHistoricoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout colo = (ConstraintLayout) rootView;

      id = R.id.imageView20;
      ImageView imageView20 = ViewBindings.findChildViewById(rootView, id);
      if (imageView20 == null) {
        break missingId;
      }

      id = R.id.imageView23;
      ImageView imageView23 = ViewBindings.findChildViewById(rootView, id);
      if (imageView23 == null) {
        break missingId;
      }

      id = R.id.imageView24;
      ImageView imageView24 = ViewBindings.findChildViewById(rootView, id);
      if (imageView24 == null) {
        break missingId;
      }

      id = R.id.lista;
      RecyclerView lista = ViewBindings.findChildViewById(rootView, id);
      if (lista == null) {
        break missingId;
      }

      return new ActivityHistoricoBinding((ConstraintLayout) rootView, colo, imageView20,
          imageView23, imageView24, lista);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
